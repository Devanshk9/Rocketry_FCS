#include <SPI.h>
#include <LoRa.h>

void setup() {
  Serial.begin(115200);
  while (!Serial); // Wait for serial port to connect (required for native USB port)

  Serial.println("Initializing LoRa...");
  if (!LoRa.begin(433E6)) { // Ensure the frequency matches your module's specification
    Serial.println("Starting LoRa failed!");
    while (1); // Infinite loop to halt execution if initialization fails
  }
  
  // Set LoRa parameters
  // LoRa.setSyncWord(0x77); // Sync word for distinguishing your network
  // LoRa.setCodingRate4(8); // Error coding rate (5) for moderate error correction
  // LoRa.setSpreadingFactor(12); // Spreading factor (7) for better range and robustness
  // LoRa.setSignalBandwidth(150E3); // Signal bandwidth (125 kHz) to match your setup
  LoRa.setSyncWord(0x77);
  LoRa.setCodingRate4(5);         // Lower coding rate for higher data rate
  LoRa.setSpreadingFactor(7);     // Lower spreading factor for higher data rate
  LoRa.setSignalBandwidth(500E3); // Higher bandwidth for higher data rate
  Serial.println("LoRa initialized.");
  // Serial.println("LoRa initialized.");
}

void loop() {
  // Try to parse packet
   
  int packetSize = LoRa.parsePacket();
  if (packetSize) { 
    // Read packet
    String receivedData = "";
    while (LoRa.available()) {
      receivedData += (char)LoRa.read();
    }

    // Print received data
    Serial.print("Received: ");
    Serial.println(receivedData);
    Serial.println();
  } 
  delay(50); // Delay to avoid flooding the serial output
  
 
}
