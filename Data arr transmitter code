//Transmitter final code

#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BMP085.h>
#include <Adafruit_MPU6050.h>
#include <SPI.h>
#include <LoRa.h>
// Create objects for BMP and MPU sensors
Adafruit_BMP085 bmp;
Adafruit_MPU6050 mpu;

void setup() {
  // Start serial communication for debugging
  Serial.begin(9600);
  Wire.begin();

  // Initialize BMP280
  if (!bmp.begin()) {
    Serial.println("Could not find a valid BMP280 sensor, check wiring or address!");
  } else {
    Serial.println("BMP085 sensor found!");
  }

  // Initialize MPU6050
  if (!mpu.begin()) {
    Serial.println("Failed to find MPU6050 chip, check wiring or address!");
  } else {
    Serial.println("MPU6050 sensor found!");
    mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
    mpu.setGyroRange(MPU6050_RANGE_500_DEG);
    mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);
  }
  if (!LoRa.begin(915E6)) {
    Serial.println("Starting LoRa failed!");
    while (1);
  }
}

void loop() {
  // Read and print data from BMP280
  
sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);
  int ax = a.acceleration.x;
  int ay = a.acceleration.y;
  int az = a.acceleration.z;
  int gx = g.gyro.x;
  int gy = g.gyro.y;
  int gz = g.gyro.z;
  int temp1 = temp.temperature;
  int pr = bmp.readPressure();
  int alt = bmp.readAltitude();
  int temp2 = bmp.readTemperature();
  int Temp = (temp1+temp2)/2;

  int dataArr[] = {ax,ay,az,gx,gy,gz,Temp,pr}; 
  
  Serial.print("Acc - x: ");
  Serial.print(ax);
  Serial.print("\n Acc - y: ");
  Serial.print(ay);
  Serial.print("");
  Serial.print("\n Acc - z: ");
  Serial.print(az);
  Serial.print("");
  Serial.print("\n Gyro - x: ");
  Serial.print(gx);
  Serial.print("");
  Serial.print("\n Gyro - y: ");
  Serial.print(gy);
  Serial.print("");
  Serial.print("\n Gyro - z: ");
  Serial.print(gz);
  Serial.print("");
  Serial.print("\n Temperature: ");
  Serial.print(Temp);
  Serial.print("");
  Serial.print("\n Pressure: ");
  Serial.print(pr);

  delay(2000); // Delay for readability

  byte byteArr[sizeof(dataArr)];
  LoRa.beginPacket();  
  LoRa.write(byteArr,sizeof(byteArr));
  LoRa.endPacket();
  Serial.print("\n sent \n");

}
